// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: arithmetic.proto

package arithmeticpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CalculationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Var           string                 `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	Op            string                 `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Left          int64                  `protobuf:"varint,3,opt,name=left,proto3" json:"left,omitempty"`
	Right         int64                  `protobuf:"varint,4,opt,name=right,proto3" json:"right,omitempty"`
	QueueName     string                 `protobuf:"bytes,5,opt,name=queueName,proto3" json:"queueName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculationData) Reset() {
	*x = CalculationData{}
	mi := &file_arithmetic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculationData) ProtoMessage() {}

func (x *CalculationData) ProtoReflect() protoreflect.Message {
	mi := &file_arithmetic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculationData.ProtoReflect.Descriptor instead.
func (*CalculationData) Descriptor() ([]byte, []int) {
	return file_arithmetic_proto_rawDescGZIP(), []int{0}
}

func (x *CalculationData) GetVar() string {
	if x != nil {
		return x.Var
	}
	return ""
}

func (x *CalculationData) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *CalculationData) GetLeft() int64 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *CalculationData) GetRight() int64 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *CalculationData) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_arithmetic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_arithmetic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_arithmetic_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key,proto3,oneof" json:"key,omitempty"`
	Value         *int64                 `protobuf:"varint,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	ErrMsg        *string                `protobuf:"bytes,3,opt,name=errMsg,proto3,oneof" json:"errMsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_arithmetic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_arithmetic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_arithmetic_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Result) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Result) GetErrMsg() string {
	if x != nil && x.ErrMsg != nil {
		return *x.ErrMsg
	}
	return ""
}

var File_arithmetic_proto protoreflect.FileDescriptor

const file_arithmetic_proto_rawDesc = "" +
	"\n" +
	"\x10arithmetic.proto\x12\farithmeticpb\"{\n" +
	"\x0fCalculationData\x12\x10\n" +
	"\x03var\x18\x01 \x01(\tR\x03var\x12\x0e\n" +
	"\x02op\x18\x02 \x01(\tR\x02op\x12\x12\n" +
	"\x04left\x18\x03 \x01(\x03R\x04left\x12\x14\n" +
	"\x05right\x18\x04 \x01(\x03R\x05right\x12\x1c\n" +
	"\tqueueName\x18\x05 \x01(\tR\tqueueName\"\x1d\n" +
	"\aMessage\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"t\n" +
	"\x06Result\x12\x15\n" +
	"\x03key\x18\x01 \x01(\tH\x00R\x03key\x88\x01\x01\x12\x19\n" +
	"\x05value\x18\x02 \x01(\x03H\x01R\x05value\x88\x01\x01\x12\x1b\n" +
	"\x06errMsg\x18\x03 \x01(\tH\x02R\x06errMsg\x88\x01\x01B\x06\n" +
	"\x04_keyB\b\n" +
	"\x06_valueB\t\n" +
	"\a_errMsg2Q\n" +
	"\n" +
	"Arithmetic\x12C\n" +
	"\tCalculate\x12\x1d.arithmeticpb.CalculationData\x1a\x15.arithmeticpb.Message\"\x00b\x06proto3"

var (
	file_arithmetic_proto_rawDescOnce sync.Once
	file_arithmetic_proto_rawDescData []byte
)

func file_arithmetic_proto_rawDescGZIP() []byte {
	file_arithmetic_proto_rawDescOnce.Do(func() {
		file_arithmetic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_arithmetic_proto_rawDesc), len(file_arithmetic_proto_rawDesc)))
	})
	return file_arithmetic_proto_rawDescData
}

var file_arithmetic_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_arithmetic_proto_goTypes = []any{
	(*CalculationData)(nil), // 0: arithmeticpb.CalculationData
	(*Message)(nil),         // 1: arithmeticpb.Message
	(*Result)(nil),          // 2: arithmeticpb.Result
}
var file_arithmetic_proto_depIdxs = []int32{
	0, // 0: arithmeticpb.Arithmetic.Execute:input_type -> arithmeticpb.CalculationData
	1, // 1: arithmeticpb.Arithmetic.Execute:output_type -> arithmeticpb.Message
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_arithmetic_proto_init() }
func file_arithmetic_proto_init() {
	if File_arithmetic_proto != nil {
		return
	}
	file_arithmetic_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_arithmetic_proto_rawDesc), len(file_arithmetic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_arithmetic_proto_goTypes,
		DependencyIndexes: file_arithmetic_proto_depIdxs,
		MessageInfos:      file_arithmetic_proto_msgTypes,
	}.Build()
	File_arithmetic_proto = out.File
	file_arithmetic_proto_goTypes = nil
	file_arithmetic_proto_depIdxs = nil
}
